# molior-deploy plugin
# vim: syntax=sh

preinit_deployment_vhd()
{
  REQUIRED_HOST_COMMANDS="kpartx qemu-img qemu-nbd"
  REQUIRED_PACKAGES="virtualbox kpartx qemu-utils"
  INSTALL_GRUB="yes"
  PARTSEP="p"
}

init_deployment_vhd()
{
  vmname=$(get_deployment_filename "vhd")
  deployment=$vmname

  if [ -z "$VHD_SUBFORMAT" ]; then
     VHD_SUBFORMAT=dynamic
  fi

  # FIXME check VMSIZE
  if [ -z "$VHD_SIZE" ]; then
    if [ -n "$VMSIZE" ]; then
      VHD_SIZE=${VMSIZE}M
    else
      log_error "please set VHD_SIZE"
    fi
  fi

  echo " * creating VHD disk of $VHD_SIZE ($VHD_SUBFORMAT)"
  VMDISK=$WORK_DIR/$deployment
  qemu-img create -f vpc -o subformat=$VHD_SUBFORMAT $VMDISK $VHD_SIZE >&2
  exit_on_error "Error creating $VMDISK"

  if ! grep -q "^nbd " /proc/modules; then
    modprobe nbd
    exit_on_error "Error loading kernel module nbd"
  fi

  # find free nbd device
  nb=""
  for nbdev in `ls -d /sys/class/block/nbd* | grep "nbd[0-9]\+$"`
  do
    S=`cat $nbdev/size`
    if [ "$S" -eq "0" ] ; then
      nb=`basename $nbdev`
      break
    fi
  done
  if [ -z "$nb" ]; then
    log_error "Could not find free nbd device"
  fi

  nbd=/dev/$nb
  qemu-nbd -c $nbd -f vpc $VMDISK >&2
  exit_on_error "Error running qemu-nbd"

  disk=$nbd

  create_partitions

  create_fs
  mount_fs
}

deinit_deployment_vhd()
{
  if [ -n "$LVM_VG" ]; then
    vgchange -an molior ${LVM_VG} >&2
  fi

  if [ -n "$nbd" ]; then
    test "$OLD_KERNEL" -eq 1 && kpartx -dv $nbd >&2
    rm -f /dev/mapper/$nb
    qemu-nbd -d $nbd >&2
    disk=""
    nbd=""
    vgscan --cache >&2
  fi
}

finalize_deployment_vhd()
{
  umount_bootstrap
  umount_fs
  deinit_deployment
}

